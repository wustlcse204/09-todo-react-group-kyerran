{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","complete","state","completed","event","preventDefault","self","console","log","target","parentNode","todo","id","xhttp3","XMLHttpRequest","onreadystatechange","readyState","status","remainingTodos","todos","filter","setState","window","location","reload","responseText","open","setRequestHeader","send","xhttp5","checked","data","text","classList","toggle","JSON","stringify","react_default","a","createElement","className","type","onClick","Component","NewTodo","onSubmit","adding","value","input","onChange","App","addTodo","sortTodo","sort","b","localeCompare","newTodoText","xhttp2","toConsumableArray","concat","parse","xhttp","_this2","src_NewTodo_0","newTodo","map","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e87ce9d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n    //create constructor -> bind \n    //underneath add a delete function and complete\n    //AJAX calls inside\n\n    constructor(props) {\n        super(props)\n        this.delete = this.delete.bind(this);\n        this.complete = this.complete.bind(this);\n        this.state = {completed:this.props.completed};\n    }\n\n    delete(event) {\n        event.preventDefault();\n        const self = this;\n        console.log(event.target.parentNode.parentNode);\n        var todo = event.target.parentNode.parentNode.id;\n        var xhttp3 = new XMLHttpRequest();\n    \n        xhttp3.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                //remove todo from list using a filter tonly return list items != to todo.id \n                //of what we want to remove\n                const remainingTodos = self.props.todos.filter((todo) => {\n                    if (todo.id !== todo) {\n                        return todo;\n                    }\n                });\n                const todos = self.props.todos;\n                self.setState({todos:  remainingTodos});\n                window.location.reload();\n               \n                console.log(todo);\n             \n                \n            }\n            \n            else if (this.readyState == 4) {\n    \n                // this.status !== 200, error from server\n                console.log(this.responseText);\n    \n            }\n        };\n    \n        xhttp3.open(\"DELETE\", \"https://cse204.work/todos/\" + todo, true);\n        xhttp3.setRequestHeader(\"x-api-key\", \"bc8fd5-ac8f4e-405c92-d79619-a294e4\");\n        xhttp3.send();\n    }\n\n    complete(event) {\n\n    event.preventDefault();\n    console.log(event.target.parentNode.parentNode);\n    const self = this;\n\n    var xhttp5 = new XMLHttpRequest();\n    \n    //var completed = false;  \n    if(event.target.checked) {\n        console.log(\"hello\");\n        //completed = true;\n        var data = {\n            completed: true\n        }\n    }\n    else {\n        //completed = false;\n        var data = {\n            completed: false\n        }\n    }\n    \n    var todo = event.target.parentNode;\n    var id = event.target.parentNode.parentNode.id;\n    console.log(event.target.parentNode.parentNode);\n    var text = this.props.text;\n    xhttp5.onreadystatechange = function () {\n    // Wait for readyState = 4 & 200 response\n    if (this.readyState == 4 && this.status == 200) {\n        // parse JSON response\n        //var todo = JSON.parse(this.responseText);\n        console.log(this.readyState);\n        self.setState({completed: true});\n        console.log(data);\n        console.log(todo);\n        if (todo.completed) {\n            console.log(\"enter if of display\");\n            console.log(text);\n            todo.classList.toggle(\"crossed-line\");\n            //event.target.checked = true;\n        }\n        else {\n            todo.classList.toggle(\"crossed-line\");\n            //event.target.checked = false;\n        }\n       \n    } else if (this.readyState == 4) {\n\n        // this.status !== 200, error from server\n        console.log(\"error\");\n        console.log(todo);\n        console.log(text);\n\n    } else {\n        console.log(\"Ready State: \"  + this.readyState);\n        console.log(\"status: \"  + this.status)\n        console.log(text);\n        console.log(todo);\n        console.log(id);\n        console.log(\"error2\");\n    }\n};\n    xhttp5.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n    xhttp5.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp5.setRequestHeader(\"x-api-key\", \"bc8fd5-ac8f4e-405c92-d79619-a294e4\");\n    xhttp5.send(JSON.stringify(data));\n    }\n\n\n    render() {\n    return (\n            <div id={this.props.id} className=\"todo-one\">\n                    <p>\n                        <input type=\"checkbox\" onClick={this.complete}  />\n                        {this.props.text}\n                        <button type=\"button\" onClick={this.delete}>Delete</button>\n                    </p>\n                   \n            </div>\n    );\n  }\n}\n\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n    constructor(props) {\n        super(props)\n        \n    }\n\n\n  render() {\n    return (\n        <form onSubmit ={this.props.adding}>\n            <button type=\"submit\" id=\"add-button\">+</button>  \n            <input value={this.props.input} onChange={this.props.onChange} type=\"text\" id=\"todo-name\" />  \n        </form> \n        \n    );\n  }\n}\n\nexport default NewTodo;","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], input: '' };\n    this.addTodo = this.addTodo.bind(this);\n    this.onChange  = this.onChange.bind(this);\n    this.sortTodo = this.sortTodo.bind(this);\n\n  }\n  //sorting alphabetically\n  sortTodo() {\n    const self = this;\n    var todos = self.state.todos;\n    todos.sort(function (a, b) {\n      return a.text.localeCompare(b.text);\n    })\n    self.setState({todos: todos});\n  }\n  \n  \n\n\n   //addTodo\n  addTodo(event) {\n    const self = this;\n    const newTodoText = this.state.input;\n\n   event.preventDefault();\n    console.log(event);\n    //var text = \" \";\n    //var text = document.getElementById(\"todo-name\").value;\n    var xhttp2 = new XMLHttpRequest();\n    var data = {\n        text: newTodoText\n    }\n  \n    // Response handler\n    xhttp2.onreadystatechange = function () {\n\n        // Wait for readyState = 4 & 200 response\n        if (this.readyState == 4 && this.status == 200) {\n\n            // parse JSON response\n            //var todo = JSON.parse(this.responseText);\n          \n            self.setState({\n              todos: [...self.state.todos, JSON.parse(this.responseText)]\n            })\n           self.sortTodo();\n        } else if (this.readyState == 4) {\n\n            // this.status !== 200, error from server\n            console.log(this.responseText);\n\n        }\n    };\n\n    xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\n\n    xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp2.setRequestHeader(\"x-api-key\", \"bc8fd5-ac8f4e-405c92-d79619-a294e4\");\n    xhttp2.send(JSON.stringify(data));\n\n    self.setState({input: \" \"});\n  }\n\n\n  componentDidMount() {\n    //make initial AJAX call to list todos\n    const self = this;\n      //document.getElementById(\"todo-list-elements\").innerHTML = \" \";\n      var xhttp = new XMLHttpRequest();\n  \n      xhttp.onreadystatechange = function () {\n          if (this.readyState == 4 && this.status == 200) {\n              var todos = JSON.parse(this.responseText);\n              self.setState({todos: todos});\n              console.log(todos);\n        \n          }\n      };\n  \n      xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n      xhttp.setRequestHeader(\"x-api-key\", \"bc8fd5-ac8f4e-405c92-d79619-a294e4\");\n      xhttp.send();\n      \n  }\n\n  onChange(event) {\n    // Set the state to the value of the input\n    const self = this;\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"title\">\n        <h1>To Do App</h1>\n      <div className=\"container\">\n        <div className=\"row\" id=\"todo-list\">\n          <div className=\"col\">\n              <section id=\"myTodos\">\n              <button onClick={this.sortTodo} id=\"sort\">Sort</button>\n           \n                <NewTodo newTodo={this.newTodo} onChange={this.onChange} input={this.state.input} adding={this.addTodo} />\n                {\n                  this.state.todos.map((todo) => \n                   <Todo key={todo.id} id={todo.id} text={todo.text} todos={this.state.todos} completed={todo.completed}/>\n                  ) \n                }\n             </section>\n          </div>\n        </div>\n      </div>  \n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}